C程序组成
	C程序是由一个或者多个.c和.h文件组成
	.c文件: c源代码文件
	.h文件: c文件的头文件
	
1，c源代码文件的组成
	(1)预处理命令。以'#'开头的行，在程序编译之前会事先做的处理
	 a.  #include  文件包含命令
	     #include <stdio.h>
		 #include "xxx.h"
		 
		 上面两个都是文件包含命令，找到相应的文件，然后把该文件的内容
		 在此处展开。不同的是，其搜索路径不一样:
		 <>在系统标准的头文件路径(如:/include,/usr/include...)下搜索
		 ""先在工程当前路径下搜索，然后再到指定的路径下搜索
			如何进行预处理:     gcc -E  1.c -o  1.i
			如何指定头文件路径: gcc 1.c -o 1  -I../
			
	 b.  宏定义
	   #define  PI 3.14     //不带参数的宏
	   #define  MAX(a,b)   ((a)>(b)?(a):(b))  //带参数的宏
	   宏的作用是"替换"的作用
	   m = MAX(3+5,6+8)
	   ==>
	   m = ((3+5) > (6+8) ? (3+5) : (6+8))
	   
	   #define  DEBUG  //仅定义一个符号DEBUG
	   
	c.  条件编译
	   #ifdef   DEBUG    //如果DEBUG被定义了，后面在#endif之前的语句才会参与编译
	   ...
	   #endif
	   
	   #ifndef __XXX_H__ 
	   #define __XXX_H__
	   ...
	   #endif
	   
	(2)全局声明
		c语言中任何对象都必须知根知底,拒绝一切来路不明(身份不清)
		"声明":c语言中声明就是把一个名字(C标识符)的属性进行说明
		比如说该标识符是变量还是函数?是变量则又是什么类型呢?
		一般在定义变量(函数)时就规定了变量(函数)的属性，所以定义也属于声明。
		
	   C程序的编译顺序是从上到下，所以我们在调用某变量或函数时，必须要先
       把他们进行声明(定义)，让系统知道他们的属性，再调用他们。	   
			变量声明
			函数声明
			类型声明
			
	(3)函数。function,功能。
		C语言的函数就是一个功能模块，是指令序列的集合。
		一个程序可以有多个函数，但有且仅有一个main函数，main函数由执行
		这个程序的操作系统调用的。
		程序的执行由main函数开始的，那么main函数结束了，这个程序也就执行完了。

2， .h文件的组成
	C语言头文件是一个接口文件(声明文件)，该文件的内容一般为相应的C文件要导出的
	接口部分的内容,其实就是一些声明
		函数的声明
			比如:	putchar()/getchar()
					printf()/scanf()
					这些函数的声明在stdio.h这个头文件里
		类型的声明
		全局变量的声明
		
		main.c    calc.c   calc.h  
		gcc  main.c  calc.c  -o  calc  //把main.c和calc.c的内容链接在一起并生成calc
		
	头文件的写法:
	#ifndef  __CALC_H__  //防止头文件重复包含
	#define  __CALC_H__
	extern int sum(int ,int );//声明一个外部的函数
	extern int a;//声明一个外部的全局变量
	
	struct test //声明一个结构体类型
	{
		int a;
		char b;
	};
	#endif
	
	