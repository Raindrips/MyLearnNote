图形库

  QPainter::Antialiasing 在可能的情况下，反锯齿
   QPainter::TextAntialiasing 在可能的情况下，文字反锯齿
   QPainter::SmoothPixmapTransform   采用平滑的Pixmap变换算法
   
   
Shape  //形状

画布
QPainter *painter
	fillRect(const QRect &, const QBrush &)


画笔：用来画线和边缘。它包含颜色、宽度、线性、拐点风格以及连线风格。
QPen pen;


画刷：用来填充几何图形的图案。它一般由颜色和风格组成，但同时也可以是纹理（一个不断重复的图像）或者是一个渐变。
QBrush brush;


字体：用来绘制文字。字体有很多属性，包括字体族和磅值大小。
QFont font;
	font.setFamily("Microsoft YaHei");
    font.setPointSize(50);
    font.setItalic(true);
    painter.setFont(font);

样式
Qt::PenStyle 


在类定义的第一行加入Q_OBJECT宏
signals:
	信号
	
 emit dlgReturn(value);  //发射信号

public slots:
	定义槽

connect(控件,SIGNAL(clicked()),接收控件,SLOT(close()));


QTimer::singleShot

QTimer::singleShot(10, this,SLOT(eventOperation()));

//添加图片
QImage img;
img.load(":res/123.png");
QPixmap pixmap=QPixmap::fromImage (img);
ui->label->setPixmap(pixmap);

  QImage::Format_RGB32
  QImage::Format_RGB888
  typedef unsigned int QRgb;   
  
  
  //约束设置的主窗口的最大/最小值
  SetDefaultConstraint
  