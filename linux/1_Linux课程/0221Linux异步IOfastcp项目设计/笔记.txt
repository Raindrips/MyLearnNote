	TCP UDP 
网络层  ipv4 ipv6 arp 
传输层	 tcp udp icmp  sctp bgp
应用层   ospf rip igmp  						
私有协议

mac+ip+tcp+应用层
mac+12345

只有root权限才能执行
setuid(); 让当前进程获得root权限
setuid(pid);
root 
 
ttl  ip头长度

setuid  
root sudo 

setsocketopt
getsocketopt

socket(AF_INET,SOCK_RAW,NULL)
icmp ping 
demo: 基于icmp协议的实现 
ping:data 
传输层：icmp      
ip层：  ipv4 
mac 


ip_hl   4字节对齐

ip_hl=2    单位为4字节

100  1


iphdrlen  1个字节 
 

struct icmphdr {
  __u8		type;
  __u8		code;
  __sum16	checksum;
  union {
	struct {
		__be16	id;  //PID
		__be16	sequence;
	} echo;
	__be32	gateway;
	struct {
		__be16	__unused;
		__be16	mtu;
	} frag;
  } un;
};
data


if( (protocol=getprotobyname("icmp") )==NULL)        
{       
	perror("getprotobyname");                
	exit(1);        
}        
	
	
IPHDR 设置IP头

setsockopt(skfd,IPPROTO_IP,IP_HDRINCL,&on,sizeof(on))

DNS解析 
www.baidu.com ----》192.168.1.199 

ping 192.168.1.199 
ping www.baidu.com 


struct hostent {
               char  *h_name;            /* official name of host */
               char **h_aliases;         /* alias list */
               int    h_addrtype;        /* host address type */
               int    h_length;          /* length of address */
               char **h_addr_list;       /* list of addresses */
           }
		   
gettimeofday 获取当前时间 		   
		   

       struct timeval {
               time_t      tv_sec;     /* seconds */
               suseconds_t tv_usec;    /* microseconds */
           };
	

rtt  路由跳数 
192.168.1.100 -----10.10.10.2
rtt 10  ttl ==maxttl 256 
　LINUX Kernel 2.2.x & 2.4.x ICMP 回显应答的 TTL 字段值为 64
 
　　FreeBSD 4.1, 4.0, 3.4;
 
　　Sun Solaris 2.5.1, 2.6, 2.7, 2.8;
 
　　OpenBSD 2.6, 2.7,
 
　　NetBSD
 
　　HP UX 10.20
 
　　ICMP 回显应答的 TTL 字段值为 255
 
　　Windows 95/98/98SE
 
　　Windows ME
 
　　ICMP 回显应答的 TTL 字段值为 32
 
　　Windows NT4 WRKS
 
　　Windows NT4 Server
 
　　Windows 2000
 
　　Windows XP
 
　　ICMP 回显应答的 TTL 字段值为 128
 
　　这样，我们就可以通过这种方法来辨别操作系统


	